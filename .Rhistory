summarise(across(list(c(-starts_with("cluster"), -year) = .fns = mean)))
pol_ds %>%
group_by(cluster_hier_diana) %>%
summarise(across(c(-starts_with("cluster"), -year), .fns = mean))
pol_ds %>%
group_by(cluster_hier_diana) %>%
summarise(across(c(-starts_with("cluster"), -year), .fns = mean))
pol_ds %>%
group_by(cluster_hier_diana) %>%
summarise(across(c(-starts_with("cluster"), -year), .fns = mean))
pol_ds %>%
group_by(cluster_hier_diana) %>%
summarise(across(c(-starts_with("cluster"), -year), .fns = mean)) %>%
ggplot() +
geom_bar()
pol_ds %>%
ggplot() +
geom_bar(aes(x = cluster_hier_diana, y = parreg_P4 ))
pol_ds %>%
ggplot() +
geom_bar(aes(x = cluster_hier_diana, y = parreg_P4))
pol_ds %>%
ggplot(aes(x = cluster_hier_diana, y = parreg_P4 )) +
geom_bar(stat = 'identity')
pol_ds %>%
ggplot(aes(x = cluster_hier_diana, y = parreg_P4 )) +
geom_bar(stat = 'identity') +
facet_wrap(~cluster_hier_diana)
pol_ds %>%
ggplot(aes(x = cluster_hier_diana, y = parreg_P4 )) +
geom_bar(stat = 'identity') +
facet_wrap(~cluster_hier_diana)
pol_ds %>% pivot_longer(cols = -cluster_hier_diana)
pol_ds %>% pivot_longer(cols = -c(cluster_hier_diana, year))
pol_ds %>% pivot_longer(cols = -cluster_hier_diana, -year))
pol_ds %>% pivot_longer(cols = -cluster_hier_diana, -year)
pol_ds %>% pivot_longer(cols = c(-cluster_hier_diana, -year))
pol_ds %>% pivot_longer(cols = c(-cluster_hier_diana))
pol_ds %>%
ggplot(aes(x = cluster_hier_diana, y = parreg_P4 )) +
geom_bar(stat = 'identity') +
facet_wrap(~cluster_hier_diana)
pol_ds %>% pivot_longer(cols = c(-cluster_hier_diana)) %>% filter(name != year)
pol_ds %>% pivot_longer(cols = c(-cluster_hier_diana)) %>% filter(name != "year")
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana), y = value, fill= factor(cluster_hier_diana))) +
geom_bopxplot() +
facet_wrap(~variable)
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana), y = value, fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~variable)
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year")
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana), y = value, fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name)
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana), y = value, fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name) +
labs(title = 'Boxplots per variable per cluster') +
xlab("cluster") +
ylab("wartość")
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana), y = value, fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name) +
labs(title = 'Boxplots per variable per cluster') +
xlab("cluster") +
ylab("wartość")
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana)),) +
geom_boxplot() +
facet_wrap(~name) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana)),) +
geom_boxplot() +
facet_wrap(~name, ncol = 3) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds %>%
pivot_longer(cols = c(-cluster_hier_diana)) %>%
filter(name != "year") %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana)),) +
geom_boxplot() +
facet_wrap(~name, ncol = 3, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds %>%
select(-year, -starts_with("cluster"))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
pol_ds %>% select(-year, -starts_with("cluster")) %>% names()
pol_ds %>% starts_with("cluster") %>% names()
pol_ds %>% starts_with("cluster")
pol_ds %>% starts_with("v2")
pol_ds %>% select(starts_with("cluster"))
pol_ds %>% select(starts_with("cluster")) %>% names()
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana)),) +
geom_boxplot() +
facet_wrap(~name, ncol = 3, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long %>% head()
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana)))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana)))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 3, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long %>%
filter(value )
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds %>% starts_with("v2x")
pol_ds %>% select(starts_with("v2x"))
pol_ds %>% select(starts_with("v2x")) %>% names()
pol_ds %>% select(starts_with("v2x_")) %>% names()
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(starts_with("v2x_", cluster_hier_diana)) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(starts_with("v2x_"), cluster_hier_diana) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE) +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(starts_with("v2x_"), cluster_hier_diana) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE, scales = "free") +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE, scales = "free") +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds %>% names()
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(-contains("v2"), cluster_hier_diana) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(-contains("v2"), cluster_hier_diana) %>% names()
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(-contains("v2"), cluster_hier_diana) %>% names()
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE, scales = "free") +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(-contains("v2"), cluster_hier_diana) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE, scales = "free") +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE,
results = 'asis')
pacman::p_load(tidyverse, kableExtra, tidyverse, cluster, factoextra, dendextend,
summarytools, stats, flexclust, fpc, clustertend, ClusterR, clValid,
mclust, kohonen)
st_options(plain.ascii = FALSE,        # Always use this option in Rmd documents
style        = "rmarkdown", # Always use this option in Rmd documents
footnote     = NA,          # Makes html-rendered results more concise
subtitle.emphasis = FALSE)  # Improves layout with some rmardown themes
load(paste0("data/", "master_ipe_v4.rdata"))
ipe_v4 <- as_tibble(ipe_v4)
ipe_v4 %>% dim()
pol_ds <-
ipe_v4 %>%
filter(country == "Poland", year > 1918,
!(year %in% c(1939, 1940, 1941, 1942, 1943, 1944, 1945, 2020))) %>%
select(year, starts_with("v2"), contains("P4"),
-c(change_P4, sf_P4, fragment_P4, regtrans_P4, countryname_raw_P4,
v2x_hosinter_VDEM, v2x_suffr_VDEM, v2elsrgel_VDEM, v2elreggov_VDEM,
v2xlg_leginter_VDEM, v2x_elecreg_VDEM, v2xlg_elecreg_VDEM))
pol_ds %>%
head() %>%
kable()
dfSummary(pol_ds, plain.ascii = FALSE, style = "grid",
graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp")
pol_ds_scaled <- pol_ds %>% fill(v2x_gender_VDEM, v2x_genpp_VDEM) %>% scale %>% as_tibble()
hc2 <- agnes(pol_ds_scaled)
print(hc2$ac)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(pol_ds_scaled, method = x)$ac
}
map_dbl(m, ac)
sqrt((pol_ds_scaled %>% nrow()) / 2)
opt <- Optimal_Clusters_KMeans(pol_ds_scaled, max_clusters=10, plot_clusters = TRUE)
opt <- Optimal_Clusters_KMeans(pol_ds_scaled, max_clusters=10, 'euclidean', plot_clusters = TRUE, criterion = 'silhouette')
clusGap(pol_ds_scaled, FUN = kmeans, nstart = 20, K.max = 20, B = 60)
chosen_size <- 13
pol_clusters <- kmeans(pol_ds_scaled %>% as.matrix(), chosen_size)
pol_ds$cluster_kmeans <- pol_clusters$cluster
pol_ds %>% group_by(cluster_kmeans) %>% count()
(pol_clusters$betweenss /pol_clusters$totss)*100
sil <- silhouette(x = pol_ds$cluster_kmeans, dist(pol_ds_scaled))
fviz_silhouette(sil)
c1<-pam(pol_ds_scaled, chosen_size)
pol_ds$cluster_pam <- c1$clustering
pol_ds %>% group_by(cluster_pam) %>% count()
clara_flex <- eclust(pol_ds_scaled %>% as.matrix(), "clara", k=chosen_size)
pol_ds$cluster_clara <- clara_flex$clustering
pol_ds %>% group_by(cluster_clara) %>% count()
fviz_cluster(clara_flex, geom="point", ellipse.type="norm")
hc3 <- agnes(pol_ds_scaled, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "dendrogram - agnes")
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = chosen_size)
pol_ds <-
pol_ds %>%
mutate(cluster_hier_ward_D2 = sub_grp)
pol_ds %>%
group_by(cluster_hier_ward_D2) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds$cluster_hier_ward_D2))
hc4 <- diana(pol_ds_scaled)
pltree(hc4, cex = 0.6, hang = -1, main = "dendrogram - diana")
sub_grp <- cutree(hc4, k = chosen_size)
pol_ds <-
pol_ds %>%
mutate(cluster_hier_diana = sub_grp)
pol_ds %>%
group_by(cluster_hier_diana) %>%
count()
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = chosen_size)
pol_ds <-
pol_ds %>%
mutate(cluster_hier_wardD2 = sub_grp)
pol_ds %>%
group_by(cluster_hier_wardD2) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds$cluster_hier_wardD2))
intern <- clValid(pol_ds_scaled %>% as.matrix(),
chosen_size,
clMethods =
c("hierarchical", "kmeans", "diana", "agnes", "pam",
"clara", "model"),
validation = "internal"
)
summary(intern)
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(starts_with("v2x_"), cluster_hier_diana) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE, scales = "free") +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pol_ds_long <-
pol_ds %>%
select(-year, -cluster_kmeans, -cluster_pam,
-cluster_clara, -cluster_hier_ward_D2, -cluster_hier_wardD2) %>%
select(-contains("v2"), cluster_hier_diana) %>%
pivot_longer(cols = c(-cluster_hier_diana))
pol_ds_long %>%
ggplot(aes(x = factor(cluster_hier_diana),
y = value,
fill= factor(cluster_hier_diana))) +
geom_boxplot() +
facet_wrap(~name, ncol = 5, shrink = FALSE, scales = "free") +
labs(title = 'Boxplots per variable per cluster') +
xlab("Cluster") +
ylab("Value") +
theme(legend.position = "none")
pacman::p_load(corrplot, maptools, smacof, gridExtra)
pol_ds_scaled_cor <- cor(pol_ds_scaled, method="pearson")
corrplot(pol_ds_scaled_cor, order ="alphabet", tl.cex=0.6)
dist_pol_ds_scaled<-dist(t(pol_ds_scaled)) # as input we need distance between units
mds3<-cmdscale(dist_pol_ds_scaled, k=2) #k - the maximum dimension of the space
plot(mds3, type='n') # plot with labels
pointLabel(mds3, labels = pol_ds %>% mutate(year = as.character(year)) %>% pull(year), cex=0.6, adj=0.5)
dis2<-sim2diss(pol_ds_scaled_cor, method=1, to.dist=TRUE)
fit.data<-mds(dis2, ndim=2,  type="ratio") # from smacof::
fit.data
summary(fit.data)
plot(fit.data)
plot(fit.data, pch=21, cex=as.numeric(fit.data$spp), bg="red")
fit.data$stress
dis2<-sim2diss(pol_ds_scaled_cor, method=1, to.dist=TRUE)
fit.data<-mds(dis2, ndim=2,  type="ordinal") # from smacof::
fit.data$stress
xxx.pca1<-prcomp(pol_ds_scaled_cor, center=FALSE, scale.=FALSE) # stats::
xxx.pca1
xxx.pca1$rotation
summary(xxx.pca1)
xxx.pca2<-princomp(pol_ds_scaled_cor) # stats::princomp()
loadings(xxx.pca2)
plot(xxx.pca2)# the same will be plot(xxx.pca1)
fviz_pca_var(xxx.pca1, col.var="steelblue")
fviz_eig(xxx.pca1, choice='eigenvalue') # eigenvalues on y-axis
fviz_eig(xxx.pca1) # percentage of explained variance on y-axis
var<-get_pca_var(xxx.pca1)
a<-fviz_contrib(xxx.pca1, "var", axes=1, xtickslab.rt=90) # default angle=45Â°
b<-fviz_contrib(xxx.pca1, "var", axes=2, xtickslab.rt=90)
grid.arrange(a,b,top='Contribution to the first two Principal Components')
xxx.pca4<-principal(pol_ds_scaled, nfactors=2, rotate="varimax")
xxx.pca4
pacman::p_load(corrplot, maptools, smacof, gridExtra, psych)
xxx.pca4<-principal(pol_ds_scaled, nfactors=2, rotate="varimax")
xxx.pca4
summary(xxx.pca4)
print(loadings(xxx.pca4), digits=3, cutoff=0.4, sort=TRUE)
plot(xxx.pca1)
plot(xxx.pca1, type = "l")
fviz_eig(xxx.pca1)
xxx.pca4$complexity
plot(xxx.pca4$complexity)
plot(xxx.pca4$complexity, pch=".", xlim=c(-20, 110), main="Complexity of factors – keep it low", sub="How many variables constitute single factor.
The higher the number, the higher the (undesired) complexity", xlab=" ", ylab="complexity")
pointLabel(xxx.pca4$complexity, labels=names(xxx.pca4$complexity), cex=0.8)
xxx.pca4$uniqueness
plot(xxx.pca4$complexity, xxx.pca4$uniqueness)
plot(xxx.pca4$complexity, xxx.pca4$uniqueness, xlim=c(0, 4))
pointLabel(xxx.pca4$complexity, xxx.pca4$uniqueness, labels=names(xxx.pca4$uniqueness), cex=0.8) # maptools:
abline(h=c(0.38, 0.75), lty=3, col=2)
abline(v=c(1.8), lty=3, col=2)
set<-data.frame(complex=xxx.pca4$complexity, unique=xxx.pca4$uniqueness)
set.worst<-set[set$complex>1.8 & set$unique>0.78,]
set.worst
set<-data.frame(complex=xxx.pca4$complexity, unique=xxx.pca4$uniqueness)
set.worst<-set[set$complex>1.8 & set$unique>0.78,]
set.worst
fviz_pca_ind(xxx.pca1, col.ind="#00AFBB", repel=TRUE)
xxx.pca1
fviz_pca_ind(xxx.pca1, col.ind="cos2", geom="point", gradient.cols=c("white", "#2E9FDF", "#FC4E07" ))
fviz_pca_ind(xxx.pca1, col.ind="cos2", geom="point", gradient.cols=c("white", "#2E9FDF", "#FC4E07" ))
fviz_pca_var(xxx.pca1, col.var = "steelblue")
autoplot(xxx.pca1$rotation)
autoplot(xxx.pca1$x)
library(ggfortify)
autoplot(xxx.pca1$rotation)
autoplot(xxx.pca1$x)
pol_ds_scaled_cor
rownames(pol_ds_scaled_cor)
xxx.pca1<-prcomp(pol_ds_scaled, center=FALSE, scale.=FALSE) # stats::
xxx.pca1
xxx.pca1$rotation
summary(xxx.pca1)
summary(xxx.pca1)
xxx.pca2<-princomp(pol_ds_scaled) # stats::princomp()
loadings(xxx.pca2)
plot(xxx.pca2)# the same will be plot(xxx.pca1)
fviz_pca_var(xxx.pca1, col.var="steelblue")
rownames(pol_ds_scaled)
fviz_eig(xxx.pca1, choice='eigenvalue') # eigenvalues on y-axis
fviz_eig(xxx.pca1)
var<-get_pca_var(xxx.pca1)
a<-fviz_contrib(xxx.pca1, "var", axes=1, xtickslab.rt=90) # default angle=45Â°
b<-fviz_contrib(xxx.pca1, "var", axes=2, xtickslab.rt=90)
grid.arrange(a,b,top='Contribution to the first two Principal Components')
xxx.pca4<-principal(pol_ds_scaled, nfactors=2, rotate="varimax")
xxx.pca4
xxx.pca4
summary(xxx.pca4)
# printing only the significant loadings
print(loadings(xxx.pca4), digits=3, cutoff=0.4, sort=TRUE)
plot(xxx.pca1)
plot(xxx.pca1, type = "l")
fviz_eig(xxx.pca1)
set<-data.frame(complex=xxx.pca4$complexity, unique=xxx.pca4$uniqueness)
set.worst<-set[set$complex>1.8 & set$unique>0.78,]
set.worst
fviz_pca_ind(xxx.pca1, col.ind="cos2", geom="point", gradient.cols=c("white", "#2E9FDF", "#FC4E07" ))
fviz_pca_var(xxx.pca1, col.var = "steelblue")
fviz_pca_ind(xxx.pca1, col.ind="cos2", geom="point", gradient.cols=c("white", "#2E9FDF", "#FC4E07" ))
fviz_pca_var(xxx.pca1, col.var = "steelblue")
