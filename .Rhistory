devtools::install_github("vdeminstitute/vdemdata")
library(vdemdata)
vdemdata::vdem
vdemdata::vdem %>% glimpse()
pacman::p_load(vdemdata, tidyverse)
vdemdata::vdem %>% glimpse()
vdemdata::vparty %>% glimpse()
vdemdata::find_var()
###
###
### hierarchical clustering
install.packages("tidyverse")
library(tidyverse)  # data manipulation
install.packages("cluster")
library(cluster)    # clustering algorithms
install.packages("factoextra")
library(factoextra) # clustering visualization
install.packages("dendextend")
library(dendextend) # for comparing two dendrograms
# use the built-in R data set USArrests, which contains statistics in arrests per 100,000 residents
# for assault, murder, and rape in each of the 50 US states in 1973
# it covers also the % the population living in urban areas
df <- USArrests
# remove missing values
df <- na.omit(df)
# standardize the data
df <- scale(df)
head(df)
# agglomerative approach
# dissimilarity matrix
d <- dist(df, method = "euclidean")
# complete linkage
hc1 <- hclust(d, method = "complete" )
# dendrogram
plot(hc1, cex = 0.6, hang = -1)
# instead of "complete" you may specify "singe", "average", "centroid", "ward" as the method
# check this out and see how it affects the output
# the same with different function
# agnes
hc2 <- agnes(df, method = "complete")
# agglomerative coefficient
hc2$ac
# it measures the amount of clustering structure found
# values closer to 1 suggest strong clustering structure
# multiple methods to assess
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# the coefficient
ac <- function(x) {
agnes(df, method = x)$ac
}
map_dbl(m, ac)
# dendrogram
hc3 <- agnes(df, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "dendrogram - agnes")
# divisive hierarchical clustering
hc4 <- diana(df)
# divise coefficient - amount of clustering structure found
hc4$dc
# dendrogram
pltree(hc4, cex = 0.6, hang = -1, main = "dendrogram - diana")
# cutting the tree
# Ward's method
hc5 <- hclust(d, method = "ward.D2" )
# cut tree into 4 groups
sub_grp <- cutree(hc5, k = 4)
# number of members in each cluster
table(sub_grp)
# observations and their groups
USArrests %>%
mutate(cluster = sub_grp) %>%
head
# plots with borders
plot(hc5, cex = 0.6)
rect.hclust(hc5, k = 4, border = 2:5)
# more visualization - way like with kmeans or pam
fviz_cluster(list(data = df, cluster = sub_grp))
# cut agnes() tree into 4 groups
hc_a <- agnes(df, method = "ward")
cutree(as.hclust(hc_a), k = 4)
# cut diana() tree into 4 groups
hc_d <- diana(df)
cutree(as.hclust(hc_d), k = 4)
# compare dendrograms by linking the labels
# compute distance matrix
res.dist <- dist(df, method = "euclidean")
# compute 2 hierarchical clusterings
hc1 <- hclust(res.dist, method = "complete")
hc2 <- hclust(res.dist, method = "ward.D2")
# create two dendrograms
dend1 <- as.dendrogram (hc1)
dend2 <- as.dendrogram (hc2)
tanglegram(dend1, dend2)
# optimal number of clusters - elbow
fviz_nbclust(df, FUN = hcut, method = "wss")
# optimal number of clusters - silhouette
fviz_nbclust(df, FUN = hcut, method = "silhouette")
# the gap statistic
# compares the total intracluster variation for different values of k
# with their expected values under null reference distribution of the data
gap_stat <- clusGap(df, FUN = hcut, nstart = 25, K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
df
# more visualization - way like with kmeans or pam
fviz_cluster(list(data = df, cluster = sub_grp))
fviz_cluster(list(data = pol_ds_scaled, cluster = sub_grp))
knitr::opts_chunk$set(echo = TRUE,
results = 'asis')
pacman::p_load(tidyverse, kableExtra, tidyverse, cluster, factoextra, dendextend,
summarytools, stats, flexclust, fpc, clustertend, ClusterR)
st_options(plain.ascii = FALSE,        # Always use this option in Rmd documents
style        = "rmarkdown", # Always use this option in Rmd documents
footnote     = NA,          # Makes html-rendered results more concise
subtitle.emphasis = FALSE)  # Improves layout with some rmardown themes
load(paste0("data/", "master_ipe_v4.rdata"))
ipe_v4 <- as_tibble(ipe_v4)
ipe_v4 %>% dim()
pol_ds <-
ipe_v4 %>%
filter(country == "Poland", year > 1918,
!(year %in% c(1939, 1940, 1941, 1942, 1943, 1944, 1945, 2020))) %>%
select(year, starts_with("v2"), contains("P4"),
-c(change_P4, sf_P4, fragment_P4, regtrans_P4, countryname_raw_P4,
v2x_hosinter_VDEM, v2x_suffr_VDEM, v2elsrgel_VDEM, v2elreggov_VDEM,
v2xlg_leginter_VDEM, v2x_elecreg_VDEM, v2xlg_elecreg_VDEM))
pol_ds %>%
head() %>%
kable()
dfSummary(pol_ds, plain.ascii = FALSE, style = "grid",
graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp")
pol_ds_scaled <- pol_ds %>% fill(v2x_gender_VDEM, v2x_genpp_VDEM) %>% scale %>% as_tibble()
hc2 <- agnes(pol_ds_scaled)
print(hc2$ac)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(pol_ds_scaled, method = x)$ac
}
map_dbl(m, ac)
sqrt((pol_ds_scaled %>% nrow()) / 2)
opt <- Optimal_Clusters_KMeans(pol_ds_scaled, max_clusters=10, plot_clusters = TRUE)
opt <- Optimal_Clusters_KMeans(pol_ds_scaled, max_clusters=10, 'euclidean',
plot_clusters = TRUE, criterion = 'silhouette')
pol_clusters <- kmeans(pol_ds_scaled %>% as.matrix(), 6)
pol_ds_scaled$cluster <- pol_clusters$cluster
pol_ds_scaled %>% group_by(cluster) %>% count()
(pol_clusters$betweenss /pol_clusters$totss)*100
sil <- silhouette(x = pol_ds_scaled$cluster, dist(pol_ds_scaled))
fviz_silhouette(sil)
hc3 <- agnes(pol_ds_scaled, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "dendrogram - agnes")
hc4 <- diana(pol_ds_scaled)
pltree(hc4, cex = 0.6, hang = -1, main = "dendrogram - diana")
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = 6)
pol_ds_scaled %>%
mutate(cluster = sub_grp) %>%
group_by(cluster) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = sub_grp))
pol_ds_scaled
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster))
pol_ds_scaled %>%
mutate(cluster_hier = sub_grp) %>%
group_by(cluster_hier) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster_hier))
pol_ds_scaled <-
pol_ds_scaled %>%
mutate(cluster_hier = sub_grp) %>%
group_by(cluster_hier) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster_hier))
pol_ds_scaled$cluster_hier
sub_grp
fviz_cluster(list(data = pol_ds_scaled, cluster = sub_grp))
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = 6)
pol_ds_scaled <-
pol_ds_scaled %>%
mutate(cluster_hier = sub_grp) %>%
group_by(cluster_hier) %>%
count()
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = 6)
pol_ds_scaled %>%
mutate(cluster = sub_grp) %>%
group_by(cluster) %>%
count()
sub_grp
sub_grphc5
hc5
hc5$labels
hc5$order
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = 6)
sub_grp
table(sub_grp)
d_pol_ds
dist(pol_ds_scaled, method = "euclidean")
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
d_pol_ds
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
hc5
sub_grp <- cutree(hc5, k = 6)
sub_grp
pol_ds_scaled
knitr::opts_chunk$set(echo = TRUE,
results = 'asis')
pacman::p_load(tidyverse, kableExtra, tidyverse, cluster, factoextra, dendextend,
summarytools, stats, flexclust, fpc, clustertend, ClusterR)
st_options(plain.ascii = FALSE,        # Always use this option in Rmd documents
style        = "rmarkdown", # Always use this option in Rmd documents
footnote     = NA,          # Makes html-rendered results more concise
subtitle.emphasis = FALSE)  # Improves layout with some rmardown themes
load(paste0("data/", "master_ipe_v4.rdata"))
ipe_v4 <- as_tibble(ipe_v4)
ipe_v4 %>% dim()
pol_ds <-
ipe_v4 %>%
filter(country == "Poland", year > 1918,
!(year %in% c(1939, 1940, 1941, 1942, 1943, 1944, 1945, 2020))) %>%
select(year, starts_with("v2"), contains("P4"),
-c(change_P4, sf_P4, fragment_P4, regtrans_P4, countryname_raw_P4,
v2x_hosinter_VDEM, v2x_suffr_VDEM, v2elsrgel_VDEM, v2elreggov_VDEM,
v2xlg_leginter_VDEM, v2x_elecreg_VDEM, v2xlg_elecreg_VDEM))
pol_ds %>%
head() %>%
kable()
dfSummary(pol_ds, plain.ascii = FALSE, style = "grid",
graph.magnif = 0.75, valid.col = FALSE, tmp.img.dir = "/tmp")
pol_ds_scaled <- pol_ds %>% fill(v2x_gender_VDEM, v2x_genpp_VDEM) %>% scale %>% as_tibble()
hc2 <- agnes(pol_ds_scaled)
print(hc2$ac)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(pol_ds_scaled, method = x)$ac
}
map_dbl(m, ac)
sqrt((pol_ds_scaled %>% nrow()) / 2)
opt <- Optimal_Clusters_KMeans(pol_ds_scaled, max_clusters=10, plot_clusters = TRUE)
opt <- Optimal_Clusters_KMeans(pol_ds_scaled, max_clusters=10, 'euclidean',
plot_clusters = TRUE, criterion = 'silhouette')
pol_clusters <- kmeans(pol_ds_scaled %>% as.matrix(), 6)
pol_ds_scaled$cluster_kmeans <- pol_clusters$cluster
pol_ds_scaled %>% group_by(cluster_kmeans) %>% count()
(pol_clusters$betweenss /pol_clusters$totss)*100
sil <- silhouette(x = pol_ds_scaled$cluster, dist(pol_ds_scaled))
sil <- silhouette(x = pol_ds_scaled$cluster_kmeans, dist(pol_ds_scaled))
fviz_silhouette(sil)
hc3 <- agnes(pol_ds_scaled, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "dendrogram - agnes")
hc4 <- diana(pol_ds_scaled)
pltree(hc4, cex = 0.6, hang = -1, main = "dendrogram - diana")
d_pol_ds <- dist(pol_ds_scaled, method = "euclidean")
hc5 <- hclust(d_pol_ds, method = "ward.D2" )
sub_grp <- cutree(hc5, k = 6)
pol_ds_scaled %>%
mutate(cluster = sub_grp) %>%
group_by(cluster) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster))
pol_ds_scaled$cluster_kmeans
pol_ds_scaled %>%
group_by(cluster) %>%
count()
pol_ds_scaled %>%
group_by(cluster_hier) %>%
count()
pol_ds_scaled <-
pol_ds_scaled %>%
mutate(cluster_hier = sub_grp)
pol_ds_scaled %>%
group_by(cluster_hier) %>%
count()
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster_hier))
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster_hier))
fviz_cluster(list(data = pol_ds_scaled, cluster = pol_ds_scaled$cluster_hier))
